{"version":3,"file":"static/js/867.6ebc474d.chunk.js","mappings":"8TAEMA,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,kCAIPC,EAAiB,+BAGVC,EAAiB,mCAAG,sGACNJ,EAASK,IAAT,gFADM,uBACrBC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qDAKjBC,EAAY,mCAAG,WAAOC,GAAP,yFACDR,EAASK,IAAT,gBAAsBG,EAAtB,oEADC,uBAChBF,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAMZG,EAAc,mCAAG,WAAOC,GAAP,yFACHV,EAASK,IAAT,gHAAsHK,IADnH,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKdK,EAAW,mCAAG,WAAOC,GAAP,yFACAZ,EAASK,IAAT,gBAAsBO,EAAtB,4EADA,uBACfN,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKXO,EAAO,mCAAG,WAAOD,GAAP,yFACIZ,EAASK,IAAT,gBAAsBO,EAAtB,qEADJ,uBACXN,EADW,EACXA,KADW,kBAEZA,GAFY,2CAAH,sDAKPQ,EAAgB,SAACC,GAAuB,IAAjBC,EAAgB,uDAAR,IACxC,OAAOD,EAAOZ,EAAoBa,EAAQD,EAA/B,sCAAqEC,EAArE,YAAoF,IAANA,EAC5F,C,2ECrCD,EAAgC,uCAAhC,EAAoF,oCAApF,EAAyI,wC,kBCoBzI,EAjBwB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjBC,GAAWC,EAAAA,EAAAA,MACXC,EAAUH,EAAMI,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,YAAaZ,EAApB,EAAoBA,MAApB,OACtB,UAAC,KAAD,CAAMa,GAAE,kBAAaX,GAAMY,UAAWC,EAA6BC,MAAO,CAAEC,KAAMT,GAAlF,WACI,eAAIM,UAAWC,EAAf,UACI,gBAAKG,KAAKd,EAAAA,EAAAA,IAAcQ,EAAa,KAAMO,IAAKnB,OAEpD,uBAAIA,MAJuDE,EADzC,IAO1B,OACI,+BACA,eAAIY,UAAWC,EAAf,SACKL,KAIZ,C,6HCnBD,EAAsB,6B,SCoBtB,EAjBwB,SAAC,GAAkB,IAAhBU,EAAe,EAAfA,SAMvB,OACI,kBAAMA,SANW,SAAAC,GACjBA,EAAMC,iBACNF,EAASC,EAAME,OAAOC,OAAOC,OAC7BJ,EAAME,OAAOG,OAChB,EAEG,WACI,kBACIC,KAAK,SACLC,KAAK,OACLC,YAAY,gBAEhB,mBAAQf,UAAWC,EAASa,KAAK,SAAjC,sBAGX,E,mCCqBD,EAlCkB,WACd,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAOMC,EAAQF,EAAavC,IAAI,SAiB/B,OAfA0C,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,gGAENF,EAFM,kEAKQrC,EAAAA,EAAAA,IAAeqC,GALvB,OAKLxC,EALK,OAMXoC,GAAU,SAAAO,GAAS,OAAK3C,EAAK4C,OAAV,IANR,gDASXC,IAAAA,OAAAA,QAAwB,qCATb,yDAAH,qDAYhBH,GACH,GAAE,CAACF,KAEA,iCACI,SAAC,EAAD,CAAiBhB,SAxBL,SAACK,GACbA,GACAU,EAAgB,CAAE,MAASV,GAElC,KAqBO,SAACiB,EAAA,EAAD,CAAiBnC,MAAQwB,MAGpC,EC7BD,EAPmB,WACf,OACI,+BACI,SAACY,EAAD,KAGX,C","sources":["components/shared/ApiService/ApiService.jsx","webpack://goit-react-hw-05-movies/./src/components/shared/MovieSearchList/MovieSearchList.module.css?434f","components/shared/MovieSearchList/MovieSearchList.jsx","webpack://goit-react-hw-05-movies/./src/components/FilmSearch/MovieSearchForm/MovieSearchForm.module.css?5ee7","components/FilmSearch/MovieSearchForm/MovieSearchForm.jsx","components/FilmSearch/FilmSearch.jsx","page/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\"\n});\n\n// const BIG_POSTER_PATH = `https://image.tmdb.org/t/p/original`;\nconst SMALL_POSTER_PATH = `https://image.tmdb.org/t/p/w`;\n\n\nexport const getTrendingMovies = async() => {\n    const { data } = await instance.get(`movie/popular?api_key=1db949d546d8184041e5d93169d90d9f&language=en-US&page=1`);\n    return data;\n};\n\nexport const getMovieById = async (movie_id) => {\n    const { data } = await instance.get(`movie/${movie_id}?api_key=1db949d546d8184041e5d93169d90d9f&language=en-US&page=1`);\n    return data;\n};\n\n\nexport const getSearchMovie = async (title) => {\n    const { data } = await instance.get(`search/movie?api_key=1db949d546d8184041e5d93169d90d9f&language=en-US&page=1&include_adult=false&query=${title}`);\n    return data;\n};\n\nexport const getReviewes = async (id) => {\n    const { data } = await instance.get(`movie/${id}/reviews?api_key=1db949d546d8184041e5d93169d90d9f&language=en-US&page=1`);\n    return data;\n};\n\nexport const getCast = async (id) => {\n    const { data } = await instance.get(`movie/${id}/credits?api_key=1db949d546d8184041e5d93169d90d9f&language=en-US`);\n    return data;\n};\n\nexport const getPosterPath = (path, width = 500) => {\n    return path ? SMALL_POSTER_PATH + width + path : `https://via.placeholder.com/${width}x${width*1.5}`;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchGallery\":\"MovieSearchList_searchGallery__tEkpk\",\"searchList\":\"MovieSearchList_searchList__b60jt\",\"wrapSearchList\":\"MovieSearchList_wrapSearchList__GExxH\"};","import { Link, useLocation } from \"react-router-dom\";\nimport css from \"./MovieSearchList.module.css\";\nimport { getPosterPath } from \"../ApiService/ApiService\";\n\nconst MovieSearchList = ({ films }) => {\n    const location = useLocation();\n    const element = films.map(({ id, poster_path, title }) =>\n        <Link to={`/movies/${id}`} className={css.wrapSearchList} key={id} state={{ from: location }}>\n            <li className={css.searchList } >\n                <img src={getPosterPath(poster_path, 300)} alt={title}/>\n            </li>\n            <p>{title}</p>\n        </Link>);\n    return (\n        <>\n        <ul className={css.searchGallery}>\n            {element}\n        </ul>\n        </>\n    )\n};\nexport default MovieSearchList;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MovieSearchForm_btn__ygNxC\"};","\nimport PropTypes from \"prop-types\";\nimport css from \"./MovieSearchForm.module.css\"\n\nconst MovieSearchForm = ({ onSubmit }) => {\n    const handleSubmit = event => {\n        event.preventDefault();\n        onSubmit(event.target.search.value);\n        event.target.reset();\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                name=\"search\"\n                type=\"text\"\n                placeholder=\"Movie name\">\n                </input>\n            <button className={css.btn} type=\"submit\">Search</button>\n        </form>\n    )\n};\nexport default MovieSearchForm;\nMovieSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n","import {getSearchMovie}  from \"../shared/ApiService/ApiService\";\nimport { useState, useEffect } from \"react\";\nimport MovieSearchForm from \"./MovieSearchForm/MovieSearchForm\";\nimport MovieSearchList from \"../shared/MovieSearchList/MovieSearchList\";\nimport { useSearchParams } from \"react-router-dom\";\nimport Notiflix from 'notiflix';\n\nconst FilmSerch = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const searchMovie = (value) => {\n        if (value) {\n            setSearchParams({ 'query': value });\n        }\n    };\n    const query = searchParams.get('query');\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n            try {\n                if (!query) {\n                    return;\n                }\n                const data = await getSearchMovie(query);\n                setMovies(prevFilms => (data.results));\n            }\n            catch  {\n                Notiflix.Notify.failure('Oops â€“ something went wrong!');\n            }\n        };\n        fetchMovie();\n    }, [query]);\n    return (\n        <>\n            <MovieSearchForm onSubmit={searchMovie} />\n            <MovieSearchList films={ movies } />\n        </>\n    )\n};\n\nexport default FilmSerch;\n","import FilmSearch from \"../../components/FilmSearch\";\n\n\nconst MoviesPage = ()=>{\n    return (\n        <>\n            <FilmSearch/>\n        </>\n    )\n}\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","SMALL_POSTER_PATH","getTrendingMovies","get","data","getMovieById","movie_id","getSearchMovie","title","getReviewes","id","getCast","getPosterPath","path","width","films","location","useLocation","element","map","poster_path","to","className","css","state","from","src","alt","onSubmit","event","preventDefault","target","search","value","reset","name","type","placeholder","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","useEffect","fetchMovie","prevFilms","results","Notiflix","MovieSearchList","FilmSearch"],"sourceRoot":""}