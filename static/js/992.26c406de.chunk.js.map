{"version":3,"file":"static/js/992.26c406de.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","components/shared/ApiService/ApiService.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__o8VqJ\",\"galleryWrap\":\"MovieDetails_galleryWrap__dM1Uy\",\"warapInform\":\"MovieDetails_warapInform__tpnBd\",\"wrap\":\"MovieDetails_wrap__-7+5C\",\"wrapImg\":\"MovieDetails_wrapImg__YdqfE\",\"movieDetal\":\"MovieDetails_movieDetal__AC8IF\",\"link\":\"MovieDetails_link__wf74g\",\"btn\":\"MovieDetails_btn__tCU2l\"};","import { Link, useParams, useNavigate, Outlet, useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useCallback} from \"react\";\nimport { getMovieById, getPosterPath } from \"../shared/ApiService/ApiService\";\nimport css from \"./MovieDetails.module.css\";\nimport Notiflix from 'notiflix';\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const  from  = location.state?.from || \"/\";\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n            try {\n                const resalt = await getMovieById(id);\n                setMovie(resalt);\n            }\n            catch({response}) {\n                Notiflix.Notify.failure('Oops – something went wrong!');\n            }\n        }\n        fetchMovie();\n    }, [id])\n\n    // В даному випадку не потрібна функція так,як відмальовується один раз,але в інших потрібно\n    // const goBack = useCallback(() => navigate(-1), [navigate])\n\n    // якщо просто повісити на onClick\n    // onClick={() => navigate(location.state.from.pathname)}\n\n    const goBack = useCallback(() => navigate(from), [navigate, from])\n    return(\n        <>\n            <div className={css.container}>\n            <button onClick={goBack} className={css.btn}>Go back</button>\n            <div className={css.galleryWrap}>\n                <div className={css.wrapImg}>\n                    <img className={ css.movieDetal} src={getPosterPath(movie?.poster_path)} alt={movie?.title}></img>\n                </div>\n                <div className={css.warapInform}>\n                    <div>\n                        <h1>{movie?.title} ({movie?.release_date.slice(0, 4)})</h1>\n                        <h3>User Score { Math.floor(movie?.vote_average) * 10 } % </h3>\n                        <h3>Overview</h3>\n                        <p>{movie?.overview}</p>\n                        <h3>Genres</h3>\n                        <p>{movie?.genres.map(genre => genre.name).join(', ')}</p>\n                    </div>\n                </div>\n            </div>\n            <hr />\n            \n            <h3>Addition information</h3>\n            <div className={css.wrap}>\n                <Link className={css.link} to=\"cast\" state={{from}}>Cast</Link>\n                <Link className={css.link} to=\"reviews\" state={{from}}>Reviews</Link>\n            </div>\n            <hr />\n            <Outlet/>\n        </div>\n    </>\n    )\n}\nexport default MovieDetails;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\"\n})\n\n// const BIG_POSTER_PATH = `https://image.tmdb.org/t/p/original`;\nconst SMALL_POSTER_PATH = `https://image.tmdb.org/t/p/w`;\n\n\nexport const getTrendingMovies = async() => {\n    const { data } = await instance.get(`movie/popular?api_key=1db949d546d8184041e5d93169d90d9f&language=en-US&page=1`);\n    return data;\n}\n\nexport const getMovieById = async (movie_id) => {\n    const { data } = await instance.get(`movie/${movie_id}?api_key=1db949d546d8184041e5d93169d90d9f&language=en-US&page=1`);\n    return data;\n}\n\n\nexport const getSearchMovie = async (title) => {\n    const { data } = await instance.get(`search/movie?api_key=1db949d546d8184041e5d93169d90d9f&language=en-US&page=1&include_adult=false&query=${title}`);\n    return data;\n}\n\nexport const getReviewes = async (id) => {\n    const { data } = await instance.get(`movie/${id}/reviews?api_key=1db949d546d8184041e5d93169d90d9f&language=en-US&page=1`);\n    return data;\n}\n\nexport const getCast = async (id) => {\n    const { data } = await instance.get(`movie/${id}/credits?api_key=1db949d546d8184041e5d93169d90d9f&language=en-US`);\n    return data;\n}\n\nexport const getPosterPath = (path, width = 500) => {\n    return path ? SMALL_POSTER_PATH + width + path : 'https://via.placeholder.com/';\n}"],"names":["useState","movie","setMovie","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovie","getMovieById","resalt","response","Notiflix","goBack","useCallback","className","css","onClick","src","getPosterPath","poster_path","alt","title","release_date","slice","Math","floor","vote_average","overview","genres","map","genre","name","join","to","instance","axios","baseURL","SMALL_POSTER_PATH","getTrendingMovies","get","data","movie_id","getSearchMovie","getReviewes","getCast","path","width"],"sourceRoot":""}